@startuml

namespace StealthBoardStrategy{
    package Front{
        package Client{
            class Client{

            }

            class ActionMessage{

            }
        }
        package UI{

        }
        package Events{

        }
    }
    package Server{
        package NetworkManager{
            class NetworkManager{
                
            }
        }
        package Event{
            abstract GameEvent{
                +EventType EventType
            }
            class ActionEvent{
                +int UnitId
                +int ActionId
                +[int, int] TargetPosition
            }
            enum EventType{
                None, Action, TurnEnd, Error
            }
        }
        package GameLogic{
            class BattleManager{
                -int TurnProcessed
                -float RemaingTime
                -Players Turn
                -List<Character> CharacterList

                +BattleLoop()
                +PreProcess()
                +MainProcess()
                +EndProcess()
                +TurnEnd()
            }

            class Board{
                -GroundTile[] tiles
            }

            class GroundTile{
                -GroundType GroundType
                -List<DotEffect> DotEffects
            }

            enum Players{
                Player1, Player2
            }
        }
        package DataBase{
            abstract Unit{
                -[int, bool] Id
                -[string, bool] Name
                -[int, bool] Position
                -bool IsActive
            }
            class Hunter{
                -[int, int, bool] Hp
                -[int, int, bool] Regen                
                -[int, int, bool] Mana
                -[int, int, bool] ManaRegen
                -[int, int, bool] Stealth
                -[int, int, bool] Exposure
                -[int, int, bool] Atk
                -[int, int, bool] Mp
                -[int, int, bool] Def
                -[int, int, bool] MR
                -[int, int, bool] Speed
                -[int, int, bool] Calculation
                -int ActionPoint
                -Buff[] buffs
                +RevealStatus()
                +AddBuff()
                +DeleteBuff()
                +ProcessBuff()
                +Damage()
                +TrueDamage()
                +Move()
            }

            class Demon{

            }

            class Rune{

            }

            class Building{

            }
            class Skill{
                -(int, bool) Id
                -(string, bool) Name
                -SkillType SkillType
                -List<int> args
                
            }

            class Buff{
                -(int, bool) Id
                -(string, bool) Name           
            }

            class DotEffect{
                -DotEffectType DotEffectType
                -int Duration
                -int CurrentTime
                -int Power
            }

            enum DotEffectType{
                None, Fire
            }

            enum GroundType{
                None, Normal, Glassy, Swamp, Rocky
            }

            enum UnitType{
                Hunter, Demon, Rune, Building
            }

            enum SkillType{

            }
            enum BuffType{

            }
        }
    }
}

@enduml